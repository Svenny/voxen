name: CI

on: [ push, workflow_dispatch ]

env:
  VULKAN_SDK_VERSION: 1.3.296

jobs:
  build-ubuntu:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        name: [ clang-debug, clang-release ]
        include:
          - name: clang-debug
            cc: clang
            cxx: clang++
            type: Debug
            tests: ON
          - name: clang-release
            cc: clang
            cxx: clang++
            type: Release
            tests: OFF
    steps:
      - name: Checkout the commit
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Provide additional repositories
        run: |
          wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-${{ env.VULKAN_SDK_VERSION }}-jammy.list \
              https://packages.lunarg.com/vulkan/${{ env.VULKAN_SDK_VERSION }}/lunarg-vulkan-${{ env.VULKAN_SDK_VERSION }}-jammy.list
          sudo apt update

      - name: Install required packages
        run: |
          sudo apt install ninja-build shaderc
          sudo apt install libwayland-dev libxkbcommon-dev xorg-dev
          sudo apt install libdw-dev

      - name: Build Voxen
        run: |
          BUILD_DIR=$XDG_RUNTIME_DIR/voxen-builds/${{ matrix.name }}
          mkdir -p $BUILD_DIR
          rm -rf $BUILD_DIR/*
          cmake -S . -B $BUILD_DIR -GNinja             \
              -DCMAKE_C_COMPILER=${{ matrix.cc }}      \
              -DCMAKE_CXX_COMPILER=${{ matrix.cxx }}   \
              -DCMAKE_BUILD_TYPE=${{ matrix.type }}    \
              -DVOXEN_BUILD_TESTS=${{ matrix.tests }}
          cmake --build $BUILD_DIR

      - name: Run simple tests
        if: matrix.tests == 'ON'
        run: |
          cd $XDG_RUNTIME_DIR/voxen-builds/${{ matrix.name }}
          ctest -j`nproc`

  build-windows:
    runs-on: windows-2022
    strategy:
      matrix:
        name: [ clang-cl-debug, clang-cl-release ]
        include:
          - name: clang-cl-debug
            type: Debug
            tests: ON
          - name: clang-cl-release
            type: Release
            tests: OFF
    steps:
      - name: Checkout the commit
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Cache Vulkan SDK installer
        id: cache-vulkan-sdk
        uses: actions/cache@v4
        with:
          path: VulkanSDK-Installer.exe
          key: windows-vulkan-sdk-${{ env.VULKAN_SDK_VERSION }}

      - name: Download Vulkan SDK installer
        if: steps.cache-vulkan-sdk.outputs.cache-hit != 'true'
        run: |
          Invoke-WebRequest `
              https://sdk.lunarg.com/sdk/download/${{ env.VULKAN_SDK_VERSION }}.0/windows/VulkanSDK-${{ env.VULKAN_SDK_VERSION }}.0-Installer.exe `
              -OutFile VulkanSDK-Installer.exe

      - name: Install Vulkan SDK
        run: ./VulkanSDK-Installer.exe --accept-licenses --default-answer --confirm-command install

      - name: CMake configure
        run: |
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -T ClangCL `
              -DCMAKE_PROGRAM_PATH=C:/VulkanSDK/${{ env.VULKAN_SDK_VERSION }}.0/Bin `
              -DCMAKE_CONFIGURATION_TYPES=${{ matrix.type }} `
              -DVOXEN_BUILD_TESTS=${{ matrix.tests }}

      - name: Build
        run: cmake --build build --config ${{ matrix.type }}

      - name: Run simple tests
        if: matrix.tests == 'ON'
        run: |
          cd build
          ctest -C ${{ matrix.type }} -j4
